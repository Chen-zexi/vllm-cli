# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (skip publishing)'
        required: false
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  # Quick sanity checks before release
  pre-release-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test]
          pip install hf-model-tool

      - name: Run tests
        run: |
          pytest tests/ -v --tb=short

      - name: Check version
        run: |
          python -c "from vllm_cli import __version__; print(f'Version: {__version__}')"

  release-build:
    runs-on: ubuntu-latest
    needs: pre-release-checks

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build release distributions
        run: |
          python -m pip install --upgrade pip
          python -m pip install build setuptools wheel
          python -m build

      - name: Check distributions
        run: |
          pip install twine
          twine check dist/*
          ls -la dist/

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    if: github.event_name == 'release' || github.event.inputs.dry_run == 'false'
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/p/vllm-cli

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Display distribution files
        run: |
          ls -la dist/
          echo "Ready to publish to PyPI"

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
